reporting: "off"
startuppopupversion: 1
disableStartupPopups: true
notARepository: 'skip'
gui:
    # stuff relating to the UI
    scrollHeight: 4 # how many lines you scroll by
    scrollPastBottom: false # enable scrolling past the bottom
    commitLength:
        show: true
    mouseEvents: true
    skipDiscardChangeWarning: true
    showFileTree: true
    # showCommandLog: true
    # showIcons: true
    showBottomLine: false
    theme:
        selectedLineBgColor:
            - '#413660'
            # selectedRangeBgColor:
            #   - '#413660'
refresher:
    refreshInterval: 60
git:
    autoFetch: true
    pull:
        mode: 'rebase'
    paging:
        colorArg: always
        # pager: cat
        # pager: delta --paging=never
update:
    method: never
confirmOnQuit: true
quitOnTopLevelReturn: false
keybinding:
    universal:
        quit: 'q'
        quit-alt1: 'q' # alternative/alias of quit
        return: '<esc>' # return to previous menu, will quit if there's nowhere to return
        quitWithoutChangingDirectory: 'Q'
        togglePanel: '<tab>' # goto the next panel
        prevItem: '<up>' # go one line up
        nextItem: '<down>' # go one line down
        prevItem-alt: 'k' # go one line up
        nextItem-alt: 'j' # go one line down
        prevBlock: '<left>' # goto the previous block / panel
        nextBlock: '<right>' # goto the next block / panel
        prevBlock-alt: 'h' # goto the previous block / panel
        nextBlock-alt: 'l' # goto the next block / panel
        optionMenu: 'x' # show help menu
        optionMenu-alt1: '?' # show help menu
        select: '<space>'
        goInto: '<enter>'
        openRecentRepos: 'o'
        remove: 'd'
        new: 'n'
        edit: 'e'
        # openFile: 'o'
        scrollUpMain: '<pgup>' # main panel scrool up
        scrollDownMain: '<pgdown>' # main panel scrool down
        scrollUpMain-alt1: 'K' # main panel scrool up
        scrollDownMain-alt1: 'J' # main panel scrool down
        scrollUpMain-alt2: '<c-u>' # main panel scrool up
        scrollDownMain-alt2: '<c-d>' # main panel scrool down
        executeCustomCommand: 'X'
        createRebaseOptionsMenu: 'M'
        pushFiles: 'P'
        pullFiles: 'p'
        refresh: '<c-r>'
        createPatchOptionsMenu: '<c-p>'
        nextTab: ']'
        prevTab: '['
    status:
        checkForUpdate: 'u'
        recentRepos: '<space>'
    files:
        commitChanges: 'C'
        commitChangesWithoutHook: 'w' # commit changes without pre-commit hook
        amendLastCommit: 'a'
        commitChangesWithEditor: 'c'
        ignoreFile: 'i'
        refreshFiles: 'p'
        stashAllChanges: 's'
        viewStashOptions: 'S'
        toggleStagedAll: '<c-a>' # stage/unstage all
        viewResetOptions: 'D'
        fetch: 'f'
    branches:
        createPullRequest: 'o'
        checkoutBranchByName: 'c'
        forceCheckoutBranch: 'F'
        rebaseBranch: 'R'
        mergeIntoCurrentBranch: 'm'
        viewGitFlowOptions: 'i'
        fastForward: 'f' # fast-forward this branch from its upstream
        pushTag: 'P'
        setUpstream: 'u' # set as upstream of checked-out branch
        fetchRemote: 'f'
    commits:
        squashDown: 's'
        renameCommit: 'E'
        renameCommitWithEditor: 'e'
        viewResetOptions: 'r'
        markCommitAsFixup: 'f'
        createFixupCommit: 'F' # create fixup commit for this commit
        squashAboveCommits: 'S'
        moveDownCommit: '<c-j>' # move commit down one
        moveUpCommit: '<c-k>' # move commit up one
        amendToCommit: 'a'
        pickCommit: 'p' # pick commit (when mid-rebase)
        revertCommit: 'u'
        cherryPickCopy: 'c'
        cherryPickCopyRange: 'C'
        pasteCommits: 'v'
        tagCommit: 'T'
        toggleDiffCommit: 'i'
        checkoutCommit: '<space>'
    stash:
        popStash: 'g'
    commitFiles:
        checkoutCommitFile: 'c'
    main:
        toggleDragSelect: 'v'
        toggleDragSelect-alt: 'V'
        toggleSelectHunk: 'a'
        pickBothHunks: 'b'
        undo: 'z'
customCommands:
    - key: 'C'
      command: "git cleanup"
      context: 'localBranches'
      subprocess: true
    - key: 'O'
      command: "gh pr create"
      context: 'localBranches'
      subprocess: true
    - key: 'L'
      prompts:
        - type: 'menu'
          title: 'Use local reference project'
          options:
            - name: 'Framework'
              value: 'Framework'
            - name: 'Resources'
              value: 'Resources'
      command: "./UseLocal{{index .PromptResponses 0}}.sh"
      context: 'files'
      loadingText: 'creating local references'
    - key: 'G'
      command: "gh pr view --web"
      context: 'localBranches'
    - key: 'D'
      prompts:
        - type: 'menu'
          title: 'Clipboard diff'
          options:
            - name: 'apply'
              value: 'pbpaste | git apply -'
            - name: 'copy'
              value: 'git diff | pbcopy'
      command: "{{index .PromptResponses 0}}"
      context: 'localBranches'
    - key: 'U'
      prompts:
        - type: 'menu'
          title: 'Update dependency'
          options:
            - name: 'framework (pull request)'
              value: 'update-framework'
            - name: 'framework (single commit)'
              value: 'update-framework-single-commit'
            - name: 'resources (pull request)'
              value: 'update-resources'
            - name: 'resources (single commit)'
              value: 'update-resources-single-commit'
      command: "{{index .PromptResponses 0}}"
      subprocess: true
      context: 'localBranches'
      loadingText: 'updating framework'
