#!/bin/bash

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Checkout or investigate GitHub work item
# @raycast.mode compact
# @raycast.icon ðŸšš

# Documentation:
# @raycast.author ppy
# @raycast.authorURL https://raycast.com/ppy
# @raycast.packageName Safari GitHub actions
# @raycast.argument1 { "type": "dropdown", "placeholder": "Checkout", "data": [{"title": "Checkout", "value": "1"},{"title": "Just task", "value": "2"}] }

url=`safari-ctl`

repo=`echo $url | sed -e 's,https://github.com/[^/]*/\([^/^#]*\).*,\1,g'`
cd ~/Projects/$repo/ > /dev/null 2>&1

if [[ "$url" == *"/pull/"* ]]; then
    eval "$(gh pr view $url --json "number,title,url,author,createdAt" | jq -r '@sh "number=\(.number)", @sh "title=\(.title)", @sh "url=\(.url)", @sh "author=\(.author.login)", @sh "created_at=\(.createdAt)"')"

    if [[ "$author" == *"peppy"* ]]; then
        # Convert PR creation time to seconds since epoch
        pr_time=$(date -j -u -f "%Y-%m-%dT%H:%M:%SZ" "$created_at" +%s)
        current_time=$(date +%s)
        time_diff=$((current_time - pr_time))

        if [ $time_diff -le 64000 ]; then
          task_title="$title"
        else
          task_title="Fixup: $title"
        fi
    else
        task_title="Review: $title"
    fi
elif [[ "$url" == *"/issues/"* ]]; then
    eval "$(gh issue view $url --json "number,title,url" | jq -r '@sh "number=\(.number)", @sh "title=\(.title)", @sh "url=\(.url)"')"
    task_title="Investigate: $title"
elif [[ "$url" == *"/discussions/"* ]]; then
    discussion_number=`echo $url | sed -e 's,https://github.com/.*/\([0-9]\),\1,g'`
    eval "$(gh api repos/ppy/$repo/discussions/$discussion_number --jq '{number: .number, title: .title, url: .html_url}' | jq -r '@sh "number=\(.number)", @sh "title=\(.title)", @sh "url=\(.url)"')"
    task_title="Investigate: $title"
else
    echo "Not a valid github tab!"
    exit 1
fi


task_notes="[github ppy/$repo#$number]($url)"

task_title_escaped=$(echo "$task_title" | sed 's/"/\\"/g')
task_notes=$(echo "$task_notes" | sed 's/"/\\"/g')

task_id=$(osascript <<EOF
tell application "Things3"
    set task_list to to dos of list "Today" whose name is "$task_title_escaped"
    if (count of task_list) > 0 then
        set task_id to id of item 1 of task_list
        return task_id
    else
        return "no"
    end if
end tell
EOF
)

auth_token=$(security find-generic-password -s "things-url-auth-token" -w)

focus=$(get-current-focus)
obs_running=$(pgrep -x OBS)

if [ -n "$obs_running" ]; then
    tag_param="&tags=Stream"
else
    tag_param=""
fi

if [ "$task_id" != "no" ]; then
    open "things:///update?id=$task_id&when=today$tag_param&list-id=CvRfq3p4a5eY3u3Wd8uwQ5&auth-token=$auth_token&completed=false"
else
    open "things:///add?title=$(echo -n "$task_title" | jq -sRr @uri)&notes=$(echo -n "$task_notes" | jq -sRr @uri)&when=today$tag_param&list-id=CvRfq3p4a5eY3u3Wd8uwQ5&auth-token=$auth_token"
fi

echo "Added task"

# select the newly added task
osascript <<EOF
tell application "System Events"
    -- Activate Things
    tell application "Things3" to activate
    repeat until application "Things3" is frontmost
        delay 0.01
    end repeat

    delay 0.05
    key code 53  -- escape
    delay 0.02
    key code 53  -- escape (in case raycast is still visible)
    delay 0.02
    key code 125 -- down arrow
    delay 0.02
    key code 125 -- down arrow
end tell
EOF

# osascript -e 'tell application "Safari" to activate'

# osascript -e 'tell application "Safari" to do JavaScript "location.reload();" in document 1'

if [ "$1" -eq 1 ]; then
    gh pr checkout $url

    echo "Checked out #$number ($title)"
    # osascript -e 'tell application "Safari" to do JavaScript "window.scrollTo(0, document.body.scrollHeight);" in document 1'
    #
    if [[ "$url" == *"/pull/"* ]]; then
        gh pr edit $url --add-reviewer peppy
    else
        gh issue edit $url --add-assignee "@me"
    fi
fi
