#!/bin/bash

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Github safari actions
# @raycast.mode silent

# Documentation:
# @raycast.author ppy
# @raycast.authorURL https://raycast.com/ppy

url=`safari-ctl`
repo=`echo $url | sed -e 's,https://github.com/[^/]*/\([^/^#]*\).*,\1,g'`

cd ~/Projects/$repo/ > /dev/null 2>&1

choice=`printf "checkout\napprove\napprove & automerge\napprove & force merge\nforce merge\n \n# operating on\n# repo: $repo\n# URL: $url" | choose -i`

case "$choice" in
    0)
        # checkout PR
        gh pr edit $url --add-reviewer peppy
        gh pr checkout $url
        ;;
    1)
        # just approve
        gh pr review $url -a
        ;;
    2)
        # approve with automerge
        gh pr review $url -a
        gh pr merge $url --auto -m
        ;;
    3)
        # approve with forced merge
        gh pr review $url -a
        gh pr merge $url --merge --disable-auto
        gh pr merge $url --merge --admin
        ;;
    4)
        # force merge
        gh pr merge $url --merge --disable-auto
        gh pr merge $url --merge --admin
        ;;
    8)

        if [[ "$url" == *"/issues/"* ]]; then
            eval "$(gh issue view $url --json "title,url" | jq -r '@sh "title=\(.title)", @sh "url=\(.url)"')"
            echo "- [~] Investigate: $title ($url)" | pbcopy
        else
            eval "$(gh pr view $url --json "title,url,author" | jq -r '@sh "title=\(.title)", @sh "url=\(.url)", @sh "author=\(.author.login)"')"
            if [[ "$author" == *"peppy"* ]]; then
                echo "- [x] $title ($url)" | pbcopy
            else
                echo "- [~] Review: $title ($url)" | pbcopy
            fi
        fi
esac
